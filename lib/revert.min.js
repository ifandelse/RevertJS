/**
 * RevertJS - Add undo/redo behavior to your JavaScript objects.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.0.1
 * Url: https://github.com/ifandelse/RevertJS
 * License(s): MIT
 */
(function(n,t){"object"==typeof module&&module.exports?module.exports=function(){var n=require("gnosis");return t(n)}:"function"==typeof define&&define.amd?define(["gnosis"],function(n){return t(n)}):n.revertjs=t(n.gnosis)})(this,function(n,t){var e=n.traverse.exclude;e.splice(e.length,0,"undo","redo","_changes","_inProgress","_position","addHistory");var i=function(n,t,e,i){for(var o=1,s=t.split("."),r=s.length,a=r-1,c=n;r>o;)o!==a?c=c[s[o]]:i?i(c[s[o]],e):c[s[o]]=e,o+=1},o=function(n,t,e,i,o,s){var a=n[t];n[t]=function(){var e=r.clone(n);a.apply(n,arguments),s.addHistory({changeType:"mutation",path:o.slice(0,o.length-t.length-1),oldVal:e,newVal:r.clone(n)}),s.rescan()}},s=function(t,e,i,o,s,a){var c=i;Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){return c},set:function(t){var e=r.clone(c),i=n.getType(e),o=n.getType(t);c=t,a.addHistory({changeType:"assignment",path:s,oldVal:e,newVal:r.clone(t)}),(i!==o||"object"===o||"array"===o)&&a.rescan()}})},r=function(t,e,i){var r;for(var r in t)(e.allTargetMembers||t.hasOwnProperty(r))&&(this[r]=t[r]);var a=function(t,e,i,r,a,c){"function"===r&&"array"===n.getType(t)&&-1!==n.traverse.arrayMembers.indexOf(e)?o(t,e,i,r,a,c):"function"!==r&&s(t,e,i,r,a,c)};n.traverse(this,a,e,i),this._changes=[],this._position=0,this._inProgress=!1};r.clone=function(n){return JSON.parse(JSON.stringify(n))},r.prototype.addHistory=function(n){this._inProgress||(this._position!==this._changes.length-1&&(this._changes=this._changes.slice(0,this._position)),this._changes.push(n),this._position=this._changes.length-1)};var a=function(n){return n>=0&&n<this._changes.length},c=function(n){var e=this._changes[this._position];setFn="mutation"===e.changeType?function(n,t){var e=[0,n.length].concat(r.clone(t));Array.prototype.splice.apply(n,e)}:t,i(this,e.path,r.clone("undo"===n?e.oldVal:e.newVal),setFn)};return r.prototype.undo=function(n){for(n=n||1,this._inProgress=!0;n>0&&a.call(this,this._position);)c.call(this,"undo"),this._position-=1,n-=1;this._inProgress=!1},r.prototype.redo=function(n){for(n=n||1,this._inProgress=!0;n>0&&a.call(this,this._position+1);)this._position+=1,c.call(this,"redo"),n-=1;this._inProgress=!1},{Undoable:r}});